<launch>
    <!-- run rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find compute_path)/launch/show.rviz" />

    <!-- 参数调整 -->
    <!-- 曲率显示 --> <param name="curvature_show_flg" type="bool" value="false" />  
    <!-- 测试模式 --> <param name="test_model_flg" type="bool" value="true" />  
    <!-- 测试次数 --><param name="test_times" type="int" value="1" />
    <!-- 测试地图编号<arg name="file_num" value="5" /> -->
    <!-- 扩展分支数目 --><arg name="extension_point_num" value="5" />

    <!-- 启发式weight --> 
    <arg name="heur_dis_cof" value="2.0" />
    <arg name="heur_curvature_cof" value="100.0" />
    <arg name="heur_yaw_cof_last" value="40.0" />  
    <arg name="heur_yaw_cof_goal" value="2.0" />
    <arg name="heur_reference_line_cof" value="40.0" />

    <!-- final path convert -->
    <arg name="final_path_convert_flg" value="false" />


    <!-- discrete map param -->
    <arg name="map_width" value="100" />
    <arg name="map_heigh" value="100" />
    <arg name="map_resolutin" value="1.0" />
    <arg name="map_origin_x" value="-10.0" />

    <!-- road_line set param -->
    <include file="$(find road_line)/launch/road_line.launch">
        <arg name="file_name" value="$(find road_line)/ditu2.txt"/>
        <arg name="road_left_width" value="10.0"/>
        <arg name="road_right_width" value="10.0"/>
        <arg name="back_forward_reselution" value="1.0" />
        <arg name="road_line_simple_seg_dis" value="2.0" />
    </include>

    <!-- hollow create node launch -->
    <include file="$(find hollow_create)/launch/hollow_create.launch">
        <arg name="yaw" value="0.0" />
        <arg name="size_x" value="10.0" />
        <arg name="size_y" value="5.0" />
        <arg name="place_x" value="12.0" />
        <arg name="place_y" value="0.0" />

        <arg name="obs_path_box_seg" value="9" />

        <arg name="obstacle_file_path" value="$(find hollow_create)/obstacles_json/obstacles-static.json" />
    </include>
    
    <!-- compute_pth set param -->
    <arg name="truck_vel" default="2.0" />
    <arg name="truck_width" default="2.11" /> <!-- 8.0 -->
    <arg name="truck_length" default="4.933" /> <!-- 12.0 -->
    <arg name="truck_base2back" default="1.043" /> <!-- 3.0 -->
    <arg name="min_turning_radius" default="8.0" /> <!-- 30.0 -->
    <arg name="start_yaw" default="0.0" />
    <arg name="start_point_x" default="0.0" />
    <arg name="start_point_y" default="0.0" />    
    <arg name="truck_box_seg" default="25" />
    <arg name="truck_box_opt_seg" default="50" />

    <!-- 直线 -->
    <arg name="goal_yaw" default="0.0" />
    <arg name="goal_point_x" default="50.0" />
    <arg name="goal_point_y" default="0.0" />

    <!-- 弯道 -->
    <!-- <arg name="goal_yaw" default="-0.4" />
    <arg name="goal_point_x" default="180.0" />
    <arg name="goal_point_y" default="-2.0" /> -->

    <arg name="dist_limit_coff" default="10.0" />
    <arg name="node2goal_r" default="4.8" />
    <arg name="node2goal_yaw" default="0.10" />

    <!-- 2020.03.04 modify -->
    <arg name="use_goal_flg" default="false" />
    <arg name="move_step" default="4.8" />
    <arg name="segment_dis" default="0.1" />
    <arg name="angle_size" default="360" />
    <arg name="detect_collision_rate" default="0.2" />


    <!-- path optimize -->
    <arg name="path_seg_num" default="6" />
    <arg name="path_fit_degree" default="3" />
    <arg name="path_resolution" default="144" />
    <arg name="path_optimize_flg" default="false" />

    <arg name="optimize_segment_dis" default="0.01" />

    <!-- speed planning -->
    <arg name="obs_path_duration" default="0.1" />
    <arg name="total_time" default="8.0" />
    <arg name="total_length" default="200.0" />
    <arg name="condition_duration" default="0.1" />
    <arg name="init_v" default="5.0" />
    <arg name="init_a" default="0.0" />
    <arg name="v_ref" default="12.0" />
    <arg name="v_limit" default="13.89" />

    <node name="hybrid_A" pkg="compute_path" type="hybrid_A" output="screen" 
    args="--flagfile=$(find compute_path)/config_gflags/config.gflags" >

        <param name="TruckInfo/truck_vel" type="double" value="$(arg truck_vel)" />
        <param name="TruckInfo/truck_width" type="double" value="$(arg truck_width)" />
        <param name="TruckInfo/truck_length" type="double" value="$(arg truck_length)" />
        <param name="TruckInfo/truck_base2back" type="double" value="$(arg truck_base2back)" />
        <param name="TruckInfo/node2goal_r" type="double" value="$(arg node2goal_r)" />
        <param name="TruckInfo/goal_yaw" type="double" value="$(arg goal_yaw)" />
        <param name="TruckInfo/start_yaw" type="double" value="$(arg start_yaw)" />
        <param name="TruckInfo/goal_point_x" type="double" value="$(arg goal_point_x)" />
        <param name="TruckInfo/goal_point_y" type="double" value="$(arg goal_point_y)" />
        <param name="TruckInfo/start_point_x" type="double" value="$(arg start_point_x)" />
        <param name="TruckInfo/start_point_y" type="double" value="$(arg start_point_y)" />
        <param name="TruckInfo/dist_limit_coff" type="double" value="$(arg dist_limit_coff)" />
        <param name="TruckInfo/truck_box_seg" type="int" value="$(arg truck_box_seg)" />
        <param name="TruckInfo/truck_box_opt_seg" type="int" value="$(arg truck_box_opt_seg)" />
        <param name="compute_path/node2goal_r" type="double" value="$(arg node2goal_r)" />
        <param name="compute_path/heur_dis_cof" type="double" value="$(arg heur_dis_cof)" />
        <param name="compute_path/node2goal_yaw" type="double" value="$(arg node2goal_yaw)" />
        <param name="compute_path/min_turning_radius" type="double" value="$(arg min_turning_radius)" />
        <param name="compute_path/path_seg_num" type="int" value="$(arg path_seg_num)" />
        <param name="compute_path/path_fit_degree" type="int" value="$(arg path_fit_degree)" />
        <param name="compute_path/path_resolution" type="int" value="$(arg path_resolution)" />
        <param name="compute_path/path_optimize_flg" type="bool" value="$(arg path_optimize_flg)" />
        <!-- 2020.03.04 modify -->
        <param name="compute_path/use_goal_flg" type="bool" value="$(arg use_goal_flg)" />
        <param name="compute_path/move_step" type="double" value="$(arg move_step)" />
        <param name="compute_path/segment_dis" type="double" value="$(arg segment_dis)" />
        <param name="compute_path/extension_point_num" type="int" value="$(arg extension_point_num)" />
        <param name="compute_path/angle_size" type="int" value="$(arg angle_size)" />
        <param name="compute_path/heur_yaw_cof_goal" type="double" value="$(arg heur_yaw_cof_goal)" />
        <param name="compute_path/heur_yaw_cof_last" type="double" value="$(arg heur_yaw_cof_last)" />
        <param name="compute_path/heur_curvature_cof" type="double" value="$(arg heur_curvature_cof)" />
        <param name="compute_path/heur_reference_line_cof" type="double" value="$(arg heur_reference_line_cof)" />
        <param name="compute_path/detect_collision_rate" type="double" value="$(arg detect_collision_rate)" />

        <param name="compute_path/optimize_segment_dis" type="double" value="$(arg optimize_segment_dis)" />
        <param name="compute_path/final_path_convert_flg" type="bool" value="$(arg final_path_convert_flg)" />

        <!-- discrete map param -->
        <param name="compute_path/map_width" type="int" value="$(arg map_width)" />
        <param name="compute_path/map_heigh" type="int" value="$(arg map_heigh)" />
        <param name="compute_path/map_origin_x" type="double" value="$(arg map_origin_x)" />
        <param name="compute_path/map_resolutin" type="double" value="$(arg map_resolutin)" />

        <!-- speed planning -->
        <param name="compute_speed/obs_path_duration" type="double" value="$(arg obs_path_duration)" />
        <param name="compute_speed/total_time" type="double" value="$(arg total_time)" />
        <param name="compute_speed/total_length" type="double" value="$(arg total_length)" />
        <param name="compute_speed/condition_duration" type="double" value="$(arg condition_duration)" />
        <param name="compute_speed/init_v" type="double" value="$(arg init_v)" />
        <param name="compute_speed/init_a" type="double" value="$(arg init_a)" />
        <param name="compute_speed/v_ref" type="double" value="$(arg v_ref)" />
        <param name="compute_speed/v_limit" type="double" value="$(arg v_limit)" />

    </node>

</launch>
